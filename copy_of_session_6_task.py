# -*- coding: utf-8 -*-
"""Copy of session-6-task.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PUdBFaGq4CGxmHCr5dQrxRcKbkfP2xBf

### **`Problem-1:`** Write a Python function that takes a list and returns a new list with unique elements of the first list.

**Exercise 1:**

Input:

```bash
[1,2,3,3,3,3,4,5]
```

Output:

```bash
[1, 2, 3, 4, 5]
```
"""

def unique(lst):
  res = []
  for i in lst:
    if i in res:
      continue
    else:
      res.append(i)
  return res
lst = [1,2,3,3,3,3,4,5]
unique(lst)

"""### **`Problem-2:`** Write a Python function that accepts a hyphen-separated sequence of words as parameter and returns the words in a hyphen-separated sequence after sorting them alphabetically.

**Example 1:**

Input:
```bash
green-red-yellow-black-white
```

Output:
```bash
black-green-red-white-yellow
```
"""

def sort_al(words):
  words = sorted(words.split("-"))
  return "-".join(words)

sent = "green-red-yellow-black-white-orange"

sort_al(sent)

"""### **`Problem 3:`** Write a Python function that accepts a string and calculate the number of upper case letters and lower case letters.

```
Sample String : 'CampusX is an Online Mentorship Program fOr EnginEering studentS.'
Expected Output :
No. of Upper case characters :  9
No. of Lower case Characters :  47
```
"""

def up_low(x):

  u_list = []
  l_list = []
  for i in x:
    if i.isupper():
      u_list.append(i)
    elif i.islower():
      l_list.append(i)

  return len(u_list), len(l_list)

sent = 'CampusX is an Online Mentorship Program fOr EnginEering studentS.'
up_low(sent)

a,b = up_low(sent)
print("No. of Upper case characters :",a)
print("No. of Lower case characters :",b)

"""### **`Problem 4:`** Write a Python program to print the even numbers from a given list.
```
Sample List : [1, 2, 3, 4, 5, 6, 7, 8, 9]
Expected Result : [2, 4, 6, 8]
```
"""

def is_even(x):
  l = []
  for i in x:
    if i%2==0:
      l.append(i)
  return l

lst = [1, 2, 3, 4, 5, 6, 7, 8, 9]

is_even(lst)

"""### **`Problem 5:`** Write a Python function to check whether a number is perfect or not.

A Perfect number is a number that is half the sum of all of its positive divisors (including itself).

Example :

```
The first perfect number is 6, because 1, 2, and 3 are its proper positive divisors, and 1 + 2 + 3 = 6.
Equivalently, the number 6 is equal to half the sum of all its positive divisors: ( 1 + 2 + 3 + 6 ) / 2 = 6.

The next perfect number is 28 = 1 + 2 + 4 + 7 + 14. This is followed by the perfect numbers 496 and 8128.
```

"""

def perfect(x):
  l = []
  for i in range(1,x):
    if x%i==0:
      l.append(i)
  sum=0
  for i in l:
    sum+=i
  if sum==x and (sum+x)/2==x:
    print(f"Yes {x} a perfect number")
  else:
    print(f"No {x} not a perfect number")


perfect(8128)

"""### **`Problem-6:`** Write a Python function to concatenate any no of dictionaries to create a new one.

```
Sample Dictionary :
dic1={1:10, 2:20}
dic2={3:30, 4:40}
dic3={5:50,6:60}
Expected Result : {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}
```
"""

def dic_concat(*dics):
  d = {}

  for i in dics:
    d.update(i)
  return d

dic1={1:10, 2:20}
dic2={3:30, 4:40}
dic3={5:50,6:60}

dic_concat(dic1,dic2,dic3)

"""`Problem-7` Write a python function that accepts a string as input and returns the word with most occurence.

```
Input:
hello how are you i am fine thank you
```

```
Output
you -> 2
```
"""

def max_occur(x):
  x=x.split(" ")
  d = {}
  for i in x:
    if i in d:
      d[i]+=1
    else:
      d[i] = 1
  maxi = max(d.values())
  for i in d:
    if d[i]==maxi:
      print(i,"-",maxi)
      break

x = "hello how are you i am fine thank you"
max_occur(x)

"""`Problem-8` Write a python function that receives a list of integers and prints out a histogram of bin size 10

```
Input:
[13,42,15,37,22,39,41,50]
```

```
Output:
{11-20:2,21-30:1,31-40:2,41-50:3}
```
"""

import math
def hist_of(x):
  d = {}
  min_bin = math.floor(min(x)/10)*10
  max_bin = math.ceil(max(x)/10)*10

  for i in range(min_bin, max_bin, 10):
    count=0
    for j in x:
      if i+1<=j<=i+10:
        count+=1
    d[str(i+1)+'-'+str(i+10)] = count
  return d

hist_of([13,42,37,15,22,39,41,50])

"""`Problem-9` Write a python function that accepts a list of 2D co-ordinates and a query point, and then finds the the co-ordinate which is closest in terms of distance from the query point.

```
List of Coordinates
[(1,1),(2,2),(3,3),(4,4)]
Query Point
(0,0)
```

```
Output
Nearest to (0,0) is (1,1)
```
"""

import math

def dist(x,y):
  dic = {}
  for i in x:
    d = math.sqrt((y[0]-i[0])**2 + (y[1]-i[1])**2)
    dic[i]=d
  closest = min(dic.values())
  for i in dic:
    if dic[i]==closest:
      print(f"Nearest to {y} is",i)

dist([(1,1),(2,2),(3,3),(4,4)],(0,0))

"""`Problem-10`:Write a python program that receives a list of strings and performs bag of word operation on those strings

https://en.wikipedia.org/wiki/Bag-of-words_model
"""

def bow(l):

  unq_words = set()

  for i in l:
    unq_words.update(i.split())

  rslt = []

  for i in l:
    rslt.append([])
    for j in unq_words:
      rslt[-1].append(i.count(j))
  print(unq_words)
  return rslt



L = ["John likes to watch movies. Mary likes movies too",
     "Mary also likes to watch football games"]
bow(L)

"""###`Problem 11:` Write a Python program to add three given lists using Python map and lambda."""

l1 = [1,2,3,4,5]
l2 = [6,7,8,9,10]
l3 = [11,12,13,14,15]

list(map(lambda x,y,z:x+y+z, l1,l2,l3))

"""###`Problem-12:`Write a Python program to create a list containing the power of said number in bases raised to the corresponding number in the index using Python map.
`Input:`
```
list1 = [1,2,3,4,5,6]
```
`Output:`
```
[1,2,9,64,625,-]
```

"""

list1 = [1,2,3,4,5,6,7,8,9]

list(map(lambda x:x**(x-1),list1))

"""###`Problem-13` Using filter() and list() functions and .lower() method filter all the vowels in a given string.


"""

string = ("A dictionary contains following information about five employees")
vowels = ['a','e','i','o','u']

list(filter(lambda x:x in vowels, (string.lower())))

"""`Problem-14`: Use reduce to convert a 2D list to 1D"""

list1 = [[1,2,3,4,5],[6,7,8,9,10]]
import functools
functools.reduce(lambda x,y: x+y, list1)

"""`Problem 15`- A dictionary contains following information about 5 employees:
- First name
- Last name
- Age
- Grade(Skilled,Semi-skilled,Highly skilled)<br>
Write a program using map/filter/reduce to a list of employees(first name + last name) who are highly skilled
"""

# Write code here
employees = [
    {
        'fname':'Nitish',
        'lname':'Singh',
        'age' : 33,
        'grade':'skilled'
    },
    {
        'fname':'Ankit',
        'lname':'Verma',
        'age' : 34,
        'grade':'semi-skilled'
    },
    {
        'fname':'Neha',
        'lname':'Singh',
        'age' : 35,
        'grade':'highly-skilled'
    },
    {
        'fname':'Anurag',
        'lname':'Kumar',
        'age' : 30,
        'grade':'skilled'
    },
    {
        'fname':'Abhinav',
        'lname':'Sharma',
        'age' : 37,
        'grade':'highly-skilled'
    }

]

list(map(lambda x: x['fname']+" "+x["lname"], list(filter(lambda x: True if x['grade']=="highly-skilled" else False, employees))))

